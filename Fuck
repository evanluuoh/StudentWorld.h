#ifndef STUDENTWORLD_H_
#define STUDENTWORLD_H_

#include "GameWorld.h"
#include "GraphObject.h"
#include "GameConstants.h"
#include "Actor.h"
#include <string>
#include <iostream>
#include <vector>
#include <queue>

// Students:  Add code to this file, StudentWorld.cpp, Actor.h, and Actor.cpp

class StudentWorld : public GameWorld
{
public:
	StudentWorld(std::string assetDir);
	~StudentWorld();
	virtual int init();
	virtual int move();
	virtual void cleanUp();

	bool hitsDirt(Actor* a, GraphObject::Direction dir);
	bool isDirt(int x, int y);

	bool isRock(int x, int y);

	void removeDirt(int x, int y);
	bool hitsRock(Actor* a, GraphObject::Direction dir);
	void collide(Actor* a, int r);
	void shootWater(GraphObject::Direction dir, int x, int y);
	void detectGoodie(Goodie* g);
	void collectGoodie(Goodie* g);
	void bribeProtester(Nugget* n);
	int countWater();
	int countSonar();
	int countGold();
	int countOil();
	int oilInLevel();
	void dropGold(int x, int y);
	void scan();
	void setDisplayText();
	GraphObject::Direction hasLineOfSight(Protester* p);
	bool canShout(Protester* p, GraphObject::Direction dir);
	void frackOff(Protester* p);
	bool pathValid(Protester* p, GraphObject::Direction dir);
	bool isCoord(int x, int y);
	void explore(std::queue<Coord>& path, int x, int y);
	void findSteps(int x, int y);
	int getStepsToExit(int x, int y);
private:
	Dirt* m_dirt[64][64];
	int coordSteps[61][61];
	Frackman* m_player;
	std::vector<Actor*> m_actors;
	bool positionValid(Actor* a);
	std::string formatText(int score, int level, int lives, int	health, int squirts, int gold, int sonar, int barrelsLeft);
	int maxOil;
	int m_water;
	int m_sonar;
	int m_gold;
	int m_oil;
	int chanceOfGoodie;
	void spawnSonar();
	void spawnPool();
	bool pDeleted;
};

#endif // STUDENTWORLD_H_

//////////////////////////////////////////////

#ifndef COORD_H_
#define COORD_H_

class Coord
{
public:
	Coord(int rr, int cc) : m_r(rr), m_c(cc) {}
	int r() const { return m_r; }
	int c() const { return m_c; }
private:
	int m_r;
	int m_c;
	int stepsToExit;
};
#endif //COORD_H_
